<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--声明组件扫描器-->
    <context:component-scan base-package="com.yjxiaoxu.crowd.mvc" />
    <!--声明视图解析器，降低开发人员的开发难度，提高开发效率-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!--开启注解驱动-->
    <mvc:annotation-driven/>
    <!--配置基于XML的异常映射-->
    <bean id="simpleMappingExceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!--配置异常类型和具体视图页面的对应关系-->
        <property name="exceptionMappings">
            <props>
                <!--
                    key属性指定异常的全限定名称
                    标签体中写对应的视图
                -->
                <prop key="java.lang.Exception">system-error</prop>
                <prop key="com.yjxiaoxu.crowd.exception.AccessDeniedException">admin-login</prop>
            </props>
        </property>
    </bean>
    <!--配置view-controller，作用相当于
        @RequestMapping("/admin/to/login/page.html")
        public String toLogin() {
            return "admin-login";
        }
    -->
    <mvc:view-controller path="/admin/to/login/page.html" view-name="admin-login" />
    <mvc:view-controller path="/admin/to/main/page.html" view-name="admin-main"/>
    <mvc:view-controller path="/admin/to/add.html" view-name="admin-add" />
    <mvc:view-controller path="/role/to/page.html" view-name="role-page" />
    <mvc:view-controller path="/menu/to/page.html" view-name="menu-page" />

    <!--
        经过升级，我们使用了Spring Security实现认证和授权功能，
        我们自定义的防止未登录访问的拦截器就不需要了
    -->

    <!--配置拦截器-->
<!--    <mvc:interceptors>-->
<!--        <mvc:interceptor>-->
<!--            &lt;!&ndash;需要拦截的地址&ndash;&gt;-->
<!--            &lt;!&ndash;/**表示多层地址，例如/aa,/aa/bb,/aa/bb/cc...&ndash;&gt;-->
<!--            <mvc:mapping path="/**"/>-->
<!--            &lt;!&ndash;不拦截的地址&ndash;&gt;-->
<!--            <mvc:exclude-mapping path="/admin/do/login.html"/>-->
<!--            <mvc:exclude-mapping path="/admin/to/login/page.html"/>-->
<!--            <mvc:exclude-mapping path="/admin/do/logout.html"/>-->
<!--           <bean class="com.yjxiaoxu.crowd.mvc.interceptor.LoginInterceptor"/>-->
<!--        </mvc:interceptor>-->
<!--    </mvc:interceptors>-->
</beans>